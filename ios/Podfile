# Uncomment this line to define a global platform for your project
# platform :ios, '12.0'

# CocoaPods analytics sends network stats synchronously affecting flutter build latency.
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure flutter pub get is executed first"
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Generated.xcconfig, then run flutter pub get"
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

flutter_ios_podfile_setup

platform :ios, '15.0'

target 'Runner' do
  use_frameworks!

  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
  target 'RunnerTests' do
    inherit! :search_paths
  end
end

post_install do |installer|
  # Add this loop here to set the deployment target for all pods
  installer.pods_project.targets.each do |target|
    target.build_configurations.each do |config|
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '15.0' # Set your desired target here
    end
  end
  # Keep the existing flutter_additional_ios_build_settings(target) call
  # It seems `flutter_additional_ios_build_settings` also accepts `installer` as an argument
  # based on your previous suggestion, but typically it expects a `target`.
  # Let's use the one that makes sense for the whole installer context or apply to each target.

  # If flutter_additional_ios_build_settings expects 'target' as its argument,
  # you should call it inside the `target.build_configurations.each` loop, or
  # more likely, it applies broadly, and the current structure is fine.
  # Given the original Podfile, it applies per target, so we need to adjust.

  # Let's adjust the `flutter_additional_ios_build_settings` call to be inside the target loop
  # if that's how it's intended to be used (which is typical for per-target settings).
  # If it modifies the whole project, the original location might be fine.

  # Based on standard Flutter Podfile setup, `flutter_additional_ios_build_settings(target)`
  # is usually called for each `target`.

  # Modified `post_install` block:
  installer.pods_project.targets.each do |target|
    target.build_configurations.each do |config|
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '15.0' # Set your desired target here
    end
    # Ensure flutter's additional build settings are applied per target
    flutter_additional_ios_build_settings(target)
  end
end